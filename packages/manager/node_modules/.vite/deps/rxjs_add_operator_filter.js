import {
  require_Observable,
  require_Subscriber
} from "./chunk-NUG4UNZ6.js";
import {
  __commonJS
} from "./chunk-LFBQMW2U.js";

// node_modules/rxjs/operators/filter.js
var require_filter = __commonJS({
  "node_modules/rxjs/operators/filter.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function(d, b) {
      for (var p in b)
        if (b.hasOwnProperty(p))
          d[p] = b[p];
      function __() {
        this.constructor = d;
      }
      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var Subscriber_1 = require_Subscriber();
    function filter(predicate, thisArg) {
      return function filterOperatorFunction(source) {
        return source.lift(new FilterOperator(predicate, thisArg));
      };
    }
    exports.filter = filter;
    var FilterOperator = function() {
      function FilterOperator2(predicate, thisArg) {
        this.predicate = predicate;
        this.thisArg = thisArg;
      }
      FilterOperator2.prototype.call = function(subscriber, source) {
        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
      };
      return FilterOperator2;
    }();
    var FilterSubscriber = function(_super) {
      __extends(FilterSubscriber2, _super);
      function FilterSubscriber2(destination, predicate, thisArg) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.count = 0;
      }
      FilterSubscriber2.prototype._next = function(value) {
        var result;
        try {
          result = this.predicate.call(this.thisArg, value, this.count++);
        } catch (err) {
          this.destination.error(err);
          return;
        }
        if (result) {
          this.destination.next(value);
        }
      };
      return FilterSubscriber2;
    }(Subscriber_1.Subscriber);
  }
});

// node_modules/rxjs/operator/filter.js
var require_filter2 = __commonJS({
  "node_modules/rxjs/operator/filter.js"(exports) {
    "use strict";
    var filter_12 = require_filter();
    function filter(predicate, thisArg) {
      return filter_12.filter(predicate, thisArg)(this);
    }
    exports.filter = filter;
  }
});

// node_modules/rxjs/add/operator/filter.js
var Observable_1 = require_Observable();
var filter_1 = require_filter2();
Observable_1.Observable.prototype.filter = filter_1.filter;
//# sourceMappingURL=rxjs_add_operator_filter.js.map
