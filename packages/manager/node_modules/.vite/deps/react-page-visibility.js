import {
  require_prop_types
} from "./chunk-PLEWTTGR.js";
import "./chunk-NGRKVEHQ.js";
import {
  require_react
} from "./chunk-CPU6GBAM.js";
import {
  __toESM
} from "./chunk-LFBQMW2U.js";

// ../../node_modules/react-page-visibility/dist/es5/PageVisibility.js
var import_prop_types = __toESM(require_prop_types());
var import_react = __toESM(require_react());

// ../../node_modules/react-page-visibility/dist/es5/utils.js
var hasDocument = typeof document !== "undefined";
var vendorEvents = [{
  hidden: "hidden",
  event: "visibilitychange",
  state: "visibilityState"
}, {
  hidden: "webkitHidden",
  event: "webkitvisibilitychange",
  state: "webkitVisibilityState"
}, {
  hidden: "mozHidden",
  event: "mozvisibilitychange",
  state: "mozVisibilityState"
}, {
  hidden: "msHidden",
  event: "msvisibilitychange",
  state: "msVisibilityState"
}, {
  hidden: "oHidden",
  event: "ovisibilitychange",
  state: "oVisibilityState"
}];
var isSupported = hasDocument && Boolean(document.addEventListener);
var visibility = function() {
  if (!isSupported) {
    return null;
  }
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = void 0;
  try {
    for (var _iterator = vendorEvents[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var event = _step.value;
      if (event.hidden in document) {
        return event;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
  return null;
}();
var getHandlerArgs = function getHandlerArgs2() {
  if (!visibility) {
    return [true, "visible"];
  }
  var hidden = visibility.hidden, state = visibility.state;
  return [!document[hidden], document[state]];
};

// ../../node_modules/react-page-visibility/dist/es5/PageVisibility.js
var _createClass = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  } else {
    return Array.from(arr);
  }
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var PageVisibility = function(_React$Component) {
  _inherits(PageVisibility2, _React$Component);
  function PageVisibility2(props) {
    _classCallCheck(this, PageVisibility2);
    var _this = _possibleConstructorReturn(this, (PageVisibility2.__proto__ || Object.getPrototypeOf(PageVisibility2)).call(this, props));
    _this.state = {
      isSupported: isSupported && visibility
    };
    return _this;
  }
  _createClass(PageVisibility2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.state.isSupported) {
        return;
      }
      this.handleVisibilityChange = this.handleVisibilityChange.bind(this);
      document.addEventListener(visibility.event, this.handleVisibilityChange);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (!this.state.isSupported) {
        return;
      }
      document.removeEventListener(visibility.event, this.handleVisibilityChange);
    }
  }, {
    key: "handleVisibilityChange",
    value: function handleVisibilityChange() {
      if (typeof this.props.onChange === "function") {
        var _props;
        (_props = this.props).onChange.apply(_props, _toConsumableArray(getHandlerArgs()));
      }
      if (typeof this.props.children === "function") {
        this.forceUpdate();
      }
    }
  }, {
    key: "render",
    value: function render() {
      if (!this.props.children) {
        return null;
      }
      if (typeof this.props.children === "function") {
        var _props2;
        if (!this.state.isSupported) {
          return this.props.children();
        }
        return (_props2 = this.props).children.apply(_props2, _toConsumableArray(getHandlerArgs()));
      }
      return import_react.default.Children.only(this.props.children);
    }
  }]);
  return PageVisibility2;
}(import_react.default.Component);
PageVisibility.displayName = "PageVisibility";
PageVisibility.propTypes = {
  onChange: import_prop_types.default.func,
  children: import_prop_types.default.oneOfType([import_prop_types.default.node, import_prop_types.default.func])
};
var PageVisibility_default = PageVisibility;

// ../../node_modules/react-page-visibility/dist/es5/usePageVisibility.js
var import_react2 = __toESM(require_react());
var _slicedToArray = function() {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = void 0;
    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i)
          break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"])
          _i["return"]();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
  return function(arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if (Symbol.iterator in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();
var isSupportedLocal = isSupported && visibility;
var usePageVisibility = function usePageVisibility2() {
  var _getHandlerArgs = getHandlerArgs(), _getHandlerArgs2 = _slicedToArray(_getHandlerArgs, 1), initiallyVisible = _getHandlerArgs2[0];
  var _useState = (0, import_react2.useState)(initiallyVisible), _useState2 = _slicedToArray(_useState, 2), isVisible = _useState2[0], setIsVisible = _useState2[1];
  (0, import_react2.useEffect)(function() {
    if (isSupportedLocal) {
      var handler = function handler2() {
        var _getHandlerArgs3 = getHandlerArgs(), _getHandlerArgs4 = _slicedToArray(_getHandlerArgs3, 1), currentlyVisible = _getHandlerArgs4[0];
        setIsVisible(currentlyVisible);
      };
      document.addEventListener(visibility.event, handler);
      return function() {
        document.removeEventListener(visibility.event, handler);
      };
    }
  }, []);
  return isVisible;
};
var usePageVisibility_default = usePageVisibility;

// ../../node_modules/react-page-visibility/dist/es5/index.js
var es5_default = PageVisibility_default;
export {
  es5_default as default,
  usePageVisibility_default as usePageVisibility
};
//# sourceMappingURL=react-page-visibility.js.map
