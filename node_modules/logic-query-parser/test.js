'use strict';

var lexer = require('./lib/lexer.js');
var checker = require('./lib/checker.js');
var syntaxer = require('./lib/syntaxer.js');
var postHelper = require('./lib/helpers/post.js');
var parser = require('./lib/index.js');
var utils = require('./lib/utils.js');

var strings = [
  "Mobidick AND Nemo",
  "Mobidick \\AND Nemo",
  "WithoutSand AND Ababor",
  "Mobidick Nemo",
  "Test OR Test2 AND Test3",
  '"Test de phrase avec \\" haha" AND test\\ de\\ phrase',
  '(test OR test2) AND test3'
];

/*strings.forEach(function(string) {
  console.log("TEST DE '" + string + '"');

  var lexemes = lexer.strToLexemes(string, " \t\n");
  console.log(lexemes);

  try {
    checker.check(lexemes);
    console.log("GOOD");
  }
  catch(e) {
    console.log(e.stack);
  }

  console.log("\n\n");
});*/

var syntaxerStrings = [
  'Antoine Bolvy)'
];

syntaxerStrings.forEach(function(string) {
  console.log("TEST DE '" + string + '"');

  /*var lexemes = lexer.strToLexemes(string, " \t\n");
  console.log(lexemes);*/

  try {
    /*checker.check(lexemes);
    console.log("GOOD");
    var tree = syntaxer.lexemesArrayToBinaryTree({}, lexemes);
    postHelper.blockPostTreatment(tree);*/

    var tree = parser.parse(string);
    //console.log(JSON.stringify(tree, null, 2));
    console.log(JSON.stringify(utils.binaryTreeToQueryJson(tree), null, 2));
  }
  catch(e) {
    console.log(e.stack);
  }

  console.log("\n\n");
});